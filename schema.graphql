directive @SQL(command: String) on OBJECT | FIELD_DEFINITION

type User
  @SQL(
    command: "create table if not exists users(id text primary key, username text unique not null);"
  ) {
  id: ID!
  username: String!
  books(first: Int!): [Book]
    @SQL(command: "select * from books where books.userId = :id limit :first")
}

type Book
  @SQL(
    command: "create table if not exists Books(id text primary key, title text unique not null, userId text, foreign key (userId) references users (id));"
  ) {
  id: ID!
  title: String
  userId: String
  user: User @SQL(command: "select * from users where users.id = :userId")
}

type Query {
  user(id: ID!): User @SQL(command: "select * from users where id = :id")
  users(first: Int!, offset: Int!): [User]
    @SQL(command: "select * from users limit :first offset :offset")
  book(id: ID!): Book @SQL(command: "select * from books where id = :id")
  books(first: Int!): [Book] @SQL(command: "select * from books limit :first")
}

type Mutation {
  createUser(username: String): User
    @SQL(
      command: "insert into users ( id, username ) values ( :id, :username )"
    )

  createBook(title: String!, userId: ID!): Book
    @SQL(
      command: "insert into books ( id, title, userId ) values ( :id, :title, :userId )"
    )
}
